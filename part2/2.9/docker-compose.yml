version: '3.8'

services:
  backend:
    build: ./example-backend
    container_name: backend-example
    environment:
      - REDIS_HOST=redis
      - POSTGRES_HOST=db
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - REQUEST_ORIGIN=http://frontend
    depends_on:
      - redis
      - db

    networks:
      - app-network
  
  frontend:
    build: ./example-frontend
    container_name: frontend-example
    networks:
      - app-network
  
  redis:
    image: redis:latest
    networks:
      - app-network
  
  db:
    image: postgres:13.2-alpine
    volumes:
      - ./database:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
    container_name: db
    networks:
      - app-network
  
  proxy:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
  
networks:
  app-network:

